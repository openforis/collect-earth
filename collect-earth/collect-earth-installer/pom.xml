<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openforis.collect.earth</groupId>
		<artifactId>collect-earth</artifactId>
		<version>1.22.4</version>
	</parent>
	<artifactId>collect-earth-installer</artifactId>
	<packaging>pom</packaging>
	<name>Open Foris Collect Earth Installer</name>
	<description>Module to create the installers for Open Foris Collect Earth</description>

	<properties>
		<!-- to avoid replacing relative path to images and other resources used
			by the installer -->
		<installer-build-path>${project.build.directory}/installer</installer-build-path>
		<installbuilder-file-name>CollectEarthWithSaiku.xml</installbuilder-file-name>
		<installbuilder-file-name-updater>CollectEarthUpdater.xml</installbuilder-file-name-updater>
		<jre.version>11.0.19+7</jre.version>
		<!-- installer file names -->
		<windows-installer-file-name>CollectEarth-${project.version}-windows-installer.exe</windows-installer-file-name>
		<linux-x64-installer-file-name>CollectEarth-${project.version}-linux-x64-installer.run</linux-x64-installer-file-name>
		<osx-installer-file-name>CollectEarth-${project.version}-osx-installer.dmg</osx-installer-file-name>
		<!-- autoupdater file names -->
		<windows-autoupdater-file-name>CollectEarthUpdater-${project.version}-windows-installer.exe</windows-autoupdater-file-name>
		<linux-x64-autoupdater-file-name>CollectEarthUpdater-${project.version}-linux-x64-installer.run</linux-x64-autoupdater-file-name>
		<osx-autoupdater-file-name>CollectEarthUpdater-${project.version}-osx-installer.app.zip</osx-autoupdater-file-name>

		<autoupdater-xml-file-name>collectEarthUpdateJRE11.xml</autoupdater-xml-file-name>
	</properties>

	<profiles>
		<profile>
			<id>assembly</id>
			<build>

			<plugins>

				<!--  0. create a buildnumber to use for the updater and set a ${buildNumber} variable -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<format>{0,date,yyyyMMddHHmm}</format>
						<items>
							<item>timestamp</item>
						</items>
					</configuration>
				</plugin>

					<!--  1. extract jre and collect-assembly into build folder -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.7.1</version>
						<executions>
							<execution>
								<id>unpack-jre</id>
								<phase>process-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>net.java.openjdk</groupId>
											<artifactId>jre</artifactId>
											<version>${jre.version}</version>
											<classifier>linux-x64</classifier>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/jre_files</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>net.java.openjdk</groupId>
											<artifactId>jre</artifactId>
											<version>${jre.version}</version>
											<classifier>osx</classifier>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/jre_files</outputDirectory>
										</artifactItem>

										<artifactItem>
											<groupId>net.java.openjdk</groupId>
											<artifactId>jre</artifactId>
											<version>${jre.version}</version>
											<classifier>windows-x64</classifier>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/jre_files</outputDirectory>
										</artifactItem>

									</artifactItems>
								</configuration>
							</execution>

						</executions>
					</plugin>

					<!-- 2. copy resource files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<id>copy-installbuilder-source-file</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-build-path}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
												<include>**</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- 3. replace application version into the xml installbuilder source file-->

					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<basedir>${installer-build-path}</basedir>
							<includes>
								<include>${installbuilder-file-name}</include>
								<include>CollectEarthMain.xml</include>
								<include>java.xml</include>
								<include>earth.properties_initial</include>
								<include>earth.properties_forced_update</include>
								<include>${installbuilder-file-name-updater}</include>
								<include>update.ini</include>
								<include>${autoupdater-xml-file-name}</include>
							</includes>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>PROJECT_VERSION</token>
									<value>${project.version}</value>
								</replacement>
								<replacement>
									<token>BUILD_NUMBER</token>
									<value>${buildNumber}</value>
								</replacement>
								<replacement>
									<token>COLLECT_EARTH_MAIN_FOLDER</token>
									<value>${basedir}/..</value>
								</replacement>
								<replacement>
									<token>GOOGLE_MAPS_API_KEY</token>
									<value>${google_maps_api_key}</value>
								</replacement>
								<replacement>
									<token>PLANET_MAPS_CE_KEY</token>
									<value>${planet_maps_ce_key}</value> <!-- This value comes from the maven_settings.xml file in the computer that fires the build -->
								</replacement>
								<replacement>
									<token>JAVA_VERSION_SET_POM</token>
									<value>${jre.version}</value>
								</replacement>


							</replacements>
						</configuration>
					</plugin>

					<!-- 4. execute installbuilder to produce the installers -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.3.0</version>
						<executions>
						    <!-- Windows -->
							<execution>
								<id>windows-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name}</argument>
										<argument>windows</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>windows-updater</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name-updater}</argument>
										<argument>windows</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>linux-x64-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name}</argument>
										<argument>linux-x64</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>linux-x64-updater</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name-updater}</argument>
										<argument>linux-x64</argument>
									</arguments>
								</configuration>
							</execution>

							<!-- Mac OS X -->
							<execution>
								<id>osx-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name}</argument>
										<argument>osx</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>osx-updater</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-file-name-updater}</argument>
										<argument>osx</argument>
									</arguments>
								</configuration>
							</execution>

						</executions>
					</plugin>

					<!-- 6. attach installers as artifact -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>3.6.0</version>
						<executions>
							<execution>
								<id>attach-installer-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/${windows-installer-file-name}</file>
											<classifier>windows</classifier>
											<type>exe</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${windows-autoupdater-file-name}</file>
											<classifier>windows-updater</classifier>
											<type>exe</type>
										</artifact>


										<artifact>
											<file>${project.build.directory}/${linux-x64-installer-file-name}</file>
											<classifier>linux-x64</classifier>
											<type>run</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${linux-x64-autoupdater-file-name}</file>
											<classifier>linux-x64-updater</classifier>
											<type>run</type>
										</artifact>



										<artifact>
											<file>${project.build.directory}/${osx-installer-file-name}</file>
											<classifier>osx</classifier>
											<type>dmg</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${osx-autoupdater-file-name}</file>
											<classifier>osx-updater</classifier>
											<type>zip</type>
										</artifact>

									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- 7 Upload the XML file that defines the presence of updates to the FTP directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<!-- 5. move generated installers into the target folder -->
							<execution>
								<id>run-ant-move-installer-files</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<move file="${installbuilder-output-directory}/${windows-installer-file-name}" tofile="${project.build.directory}/${windows-installer-file-name}" failonerror="true" />
										<move file="${installbuilder-output-directory}/${windows-autoupdater-file-name}" tofile="${project.build.directory}/${windows-autoupdater-file-name}" failonerror="true" />

										<move file="${installbuilder-output-directory}/${linux-x64-installer-file-name}" tofile="${project.build.directory}/${linux-x64-installer-file-name}" failonerror="true" />
										<move file="${installbuilder-output-directory}/${linux-x64-autoupdater-file-name}" tofile="${project.build.directory}/${linux-x64-autoupdater-file-name}" failonerror="true" />

										<move file="${installbuilder-output-directory}/${osx-installer-file-name}" tofile="${project.build.directory}/${osx-installer-file-name}" failonerror="true" />
										<move file="${installbuilder-output-directory}/${osx-autoupdater-file-name}" tofile="${project.build.directory}/${osx-autoupdater-file-name}" failonerror="true" />

									</target>
								</configuration>
							</execution>

						</executions>

					</plugin>
					
					<plugin>
				      <groupId>org.apache.maven.plugins</groupId>
				      <artifactId>maven-javadoc-plugin</artifactId>
				    </plugin>
				    <plugin>
				      <groupId>org.apache.maven.plugins</groupId>
				      <artifactId>maven-source-plugin</artifactId>
				    </plugin>


				</plugins>
			</build>
		</profile>

	</profiles>

</project>